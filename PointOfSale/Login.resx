<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>